<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:cm="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
        xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro" xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:markPad="clr-namespace:MarkPad"
        xmlns:behaviors="clr-namespace:MarkPad.Behaviors" xmlns:ui="clr-namespace:MarkPad.Settings.UI" xmlns:s="clr-namespace:MarkPad.Infrastructure"
        x:Class="MarkPad.ShellView" xmlns:converters="clr-namespace:MarkPad.Converters" xmlns:commands="clr-namespace:MarkPad.Document.Commands"
        xmlns:search="clr-namespace:MarkPad.Document.Search" mc:Ignorable="d" MouseLeftButtonDown="DragMoveWindow" MouseMove="MouseMoveWindow"
        MouseDoubleClick="ShellViewMouseDoubleClick" DragOver="WindowDragOver" Icon="markpad.ico" SnapsToDevicePixels="True" AllowDrop="True"
        x:Name="Window" d:DataContext="{d:DesignInstance {x:Type markPad:ShellViewModel}}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MarkPad;component/Styles/MarkPad.Accents.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- ReSharper disable Xaml.RedundantResource -->
            <sys:String x:Key="WindowCommandsMinimiseToolTip">Minimise</sys:String>
            <sys:String x:Key="WindowCommandsMaximiseToolTip">Maximise</sys:String>
            <sys:String x:Key="WindowCommandsRestoreToolTip">Restore</sys:String>
            <sys:String x:Key="WindowCommandsCloseToolTip">Close</sys:String>
            <!-- ReSharper restore Xaml.RedundantResource -->
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveDocumentCommand}" />
        <KeyBinding Modifiers="Ctrl+Shift" Key="S" Command="{Binding SaveAllDocumentsCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding NewDocumentCommand}" />
        <KeyBinding Modifiers="Ctrl+Shift" Key="P" Command="{Binding PublishDocumentCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding OpenDocumentCommand}" />
        <KeyBinding Modifiers="Ctrl+Shift" Key="O" Command="{Binding OpenFromWebCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="W" Command="{Binding CloseDocumentCommand}" />

        <KeyBinding Key="Escape" Command="commands:ShellCommands.Esc" />
        <KeyBinding Key="F" Command="commands:ShellCommands.Search" Modifiers="Control" />
    </Window.InputBindings>

    <i:Interaction.Behaviors>
        <behaviours:BorderlessWindowBehavior />
    </i:Interaction.Behaviors>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="PreviewDrop">
            <cm:ActionMessage MethodName="OpenDocument">
                <cm:Parameter Value="$filenames" />
            </cm:ActionMessage>
        </i:EventTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Key="F10" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="ToggleWebView" />
        </s:InputBindingTrigger>

        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Key="F3" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="Search">
                <cm:Parameter Value="{x:Static search:SearchType.Next}" />
            </cm:ActionMessage>
        </s:InputBindingTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Modifiers="Shift" Key="F3" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="Search">
                <cm:Parameter Value="{x:Static search:SearchType.Prev}" />
            </cm:ActionMessage>
        </s:InputBindingTrigger>
    </i:Interaction.Triggers>

    <Window.Background>
        <LinearGradientBrush MappingMode="Absolute" StartPoint="0,0" EndPoint="0,150">
            <GradientStop Color="#FFDEDEDE" />
            <GradientStop Color="White" Offset="1" />
        </LinearGradientBrush>
    </Window.Background>
    <Grid Margin="0" behaviors:VisualStateHelper.VisualStateName="{Binding CurrentState}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="58" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="20" />
        </Grid.RowDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0" To="SaveState" />
                    <VisualTransition GeneratedDuration="0" To="NewState" />
                    <VisualTransition GeneratedDuration="0" To="OpenState" />
                    <VisualTransition GeneratedDuration="0" To="ShowSettings">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SettingsControl">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SettingsControl">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseIn" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SettingsShadow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SettingsShadow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SettingsControl"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="150">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition GeneratedDuration="0" To="HideSettings">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SettingsShadow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SettingsControl">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SettingsShadow">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SettingsControl">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                Storyboard.TargetName="SettingsControl">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="150" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="SaveState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NewItems">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SaveItems">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SaveItems">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseIn" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseIn" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                            Storyboard.TargetName="SaveItems">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CircleEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="NewState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="OpenItems">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SaveItems">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NewItems">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NewItems">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseIn" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseIn" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                            Storyboard.TargetName="NewItems">
                            <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CircleEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="OpenState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NewItems">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SaveItems">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="OpenItems">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OpenItems">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseIn" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseIn" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                            Storyboard.TargetName="OpenItems">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CircleEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="ShowSettings">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SettingsControl">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SettingsShadow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>

                </VisualState>
                <VisualState x:Name="HideSettings">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SettingsControl">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SettingsShadow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid x:Name="Header" Background="Transparent">
            <TextBlock TextWrapping="Wrap" VerticalAlignment="Top" d:LayoutOverrides="Width" FontWeight="Bold" FontSize="10.667" Margin="30,10,0,0"
                       Visibility="Collapsed">
                <Run Text="MARKPAD" />
            </TextBlock>
            <WrapPanel UseLayoutRounding="False" HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal" Margin="30,9,0,0">
                <WrapPanel.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ChromelessButtonStyle}" x:Key="DefaultButton">
                        <Setter Property="FontSize" Value="20" />
                        <Setter Property="Margin" Value="0,0,20,0" />
                        <Setter Property="FontWeight" Value="Light" />
                    </Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}" x:Key="OpenDocumentsOnly">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MDI.Items.Count}" Value="0">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </WrapPanel.Resources>
                <Button x:Name="ShowNew" Content="new" Style="{StaticResource DefaultButton}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:GoToStateAction StateName="NewState" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button x:Name="ShowOpen" Content="open" Style="{StaticResource DefaultButton}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:GoToStateAction StateName="OpenState" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button x:Name="ShowSave" Content="save" Style="{StaticResource OpenDocumentsOnly}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:GoToStateAction StateName="SaveState" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button x:Name="PrintDocument" Content="print" Style="{StaticResource OpenDocumentsOnly}" />
                <Button x:Name="PublishDocument" Content="publish" Style="{StaticResource OpenDocumentsOnly}" Command="{Binding PublishDocumentCommand}" />
            </WrapPanel>
            <WrapPanel x:Name="NewItems" Margin="30,0,0,0" Opacity="0.995" VerticalAlignment="Bottom" Height="20" RenderTransformOrigin="0.5,0.5"
                       d:LayoutOverrides="VerticalAlignment, GridBox">
                <WrapPanel.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ChromelessButtonStyle}">
                        <Setter Property="FontSize" Value="13" />
                        <Setter Property="Margin" Value="0,0,20,0" />
                        <Setter Property="FontWeight" Value="SemiBold" />
                    </Style>
                </WrapPanel.Resources>
                <WrapPanel.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </WrapPanel.RenderTransform>
                <Button AutomationProperties.AutomationId="NewDocument" Content="BLANK PAGE" Command="{Binding NewDocumentCommand}" />
                <Button AutomationProperties.AutomationId="NewJekyllDocument" Content="JEKYLL PAGE" Command="{Binding NewJekyllDocumentCommand}" />
                <WrapPanel x:Name="CreateNewPageHook" Margin="0,0,0,0" />
            </WrapPanel>
            <WrapPanel x:Name="SaveItems" Visibility="Collapsed" Opacity="0" Margin="30,0,0,0" VerticalAlignment="Bottom" Height="20"
                       RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="VerticalAlignment, GridBox">
                <WrapPanel.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ChromelessButtonStyle}">
                        <Setter Property="FontSize" Value="13" />
                        <Setter Property="Margin" Value="0,0,20,0" />
                        <Setter Property="FontWeight" Value="SemiBold" />
                    </Style>
                </WrapPanel.Resources>
                <WrapPanel.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform X="-50" />
                    </TransformGroup>
                </WrapPanel.RenderTransform>
                <Button AutomationProperties.AutomationId="SaveDocument" Content="SAVE" Command="{Binding SaveDocumentCommand}" />
                <Button AutomationProperties.AutomationId="SaveAsDocument" Content="SAVE AS" Command="{Binding SaveDocumentAsCommand}" />
                <Button AutomationProperties.AutomationId="SaveAllDocuments" Content="SAVE ALL" Command="{Binding SaveAllDocumentsCommand}" />
                <WrapPanel x:Name="SavePageHook" Margin="0,0,0,0" />
            </WrapPanel>
            <WrapPanel x:Name="OpenItems" Visibility="Collapsed" Opacity="0" Margin="30,0,0,0" VerticalAlignment="Bottom" Height="20"
                       RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="VerticalAlignment, GridBox">
                <WrapPanel.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ChromelessButtonStyle}">
                        <Setter Property="FontSize" Value="13" />
                        <Setter Property="Margin" Value="0,0,20,0" />
                        <Setter Property="FontWeight" Value="SemiBold" />
                    </Style>
                </WrapPanel.Resources>
                <WrapPanel.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform X="-50" />
                    </TransformGroup>
                </WrapPanel.RenderTransform>
                <Button AutomationProperties.AutomationId="OpenDocument" Content="OPEN" Command="{Binding OpenDocumentCommand}" />
                <Button AutomationProperties.AutomationId="OpenFromWeb" Content="OPEN FROM WEB" Command="{Binding OpenFromWebCommand}" />
            </WrapPanel>
            <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10" Orientation="Horizontal">
                <ContentControl x:Name="Updater" />
                <Button Content="SETTINGS" Style="{DynamicResource ChromelessButtonStyle}" FontSize="10.667" FontWeight="Bold" AutomationProperties.AutomationId="MarkpadSettings">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <cm:ActionMessage MethodName="ShowSettings" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <TextBlock Margin="10,0">
                    <Run Text="|" />
                </TextBlock>
                <Button Content="HELP" Style="{DynamicResource ChromelessButtonStyle}" FontSize="10.667" FontWeight="Bold" Margin="0,0,20,0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <cm:ActionMessage MethodName="ShowHelp" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Click="ButtonMinimiseOnClick" ToolTip="{DynamicResource WindowCommandsMinimiseToolTip}"
                        Style="{DynamicResource ChromelessButtonStyle}" Content="0" FontFamily="Marlett" />
                <Button Click="ButtonMaxRestoreOnClick" ToolTip="{DynamicResource WindowCommandsMaximiseToolTip}" x:Name="MaxRestore"
                        Style="{DynamicResource ChromelessButtonStyle}" Content="1" FontFamily="Marlett" />
                <Button x:Name="TryClose" ToolTip="{DynamicResource WindowCommandsCloseToolTip}" Style="{DynamicResource ChromelessButtonStyle}"
                        Content="r" FontFamily="Marlett" />
            </StackPanel>
            <Rectangle HorizontalAlignment="Left" Stroke="Black" Width="10" StrokeThickness="0" Margin="0,10,0,0">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{DynamicResource HighlightDarkColor}" />
                </Rectangle.Fill>
            </Rectangle>
        </Grid>

        <ContentControl x:Name="MDI" Margin="10,0" Grid.Row="1" />

        <Rectangle x:Name="SettingsShadow" Fill="#3F000000" Stroke="Black" StrokeThickness="0" Visibility="Collapsed" Grid.RowSpan="2" />
        <ui:SettingsView x:Name="SettingsControl" Visibility="Collapsed" DataContext="{Binding Settings}" Margin="100,0,0,0"
                         RenderTransformOrigin="0.5,0.5" Grid.RowSpan="3">
            <ui:SettingsView.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </ui:SettingsView.RenderTransform>
        </ui:SettingsView>

        <Grid x:Name="SearchPanel" Grid.Row="2"
              Visibility="{Binding SearchingWithBar, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border Background="#f0f0f0" BorderBrush="#999999" BorderThickness="1" CornerRadius="0" Padding="3,2,3,2" Margin="0">
                <DockPanel Margin="2">
                    <Button Content="Replace" Width="75" DockPanel.Dock="Right" Margin="5,0,0,0" ToolTip="Replace">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <cm:ActionMessage MethodName="Search">
                                    <cm:Parameter Value="{x:Static search:SearchType.Replace}" />
                                </cm:ActionMessage>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Content="Find prev" Width="75" DockPanel.Dock="Right" Margin="5,0,0,0" ToolTip="SHIFT + F3">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <cm:ActionMessage MethodName="Search">
                                    <cm:Parameter Value="{x:Static search:SearchType.Prev}" />
                                </cm:ActionMessage>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Content="Find" Width="75" DockPanel.Dock="Right" Margin="5,0,0,0" ToolTip="F3">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <cm:ActionMessage MethodName="Search">
                                    <cm:Parameter Value="{x:Static search:SearchType.Next}" />
                                </cm:ActionMessage>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <ToggleButton IsChecked="{Binding SearchSettings.Regex, Mode=TwoWay}" Content=".*" Width="30" ToolTip="Regular expressions">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <cm:ActionMessage MethodName="Search">
                                    <cm:Parameter Value="{x:Static search:SearchType.Normal}" />
                                </cm:ActionMessage>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding SearchSettings.CaseSensitive, Mode=TwoWay}" Content="A" Width="30" ToolTip="Case sensitive">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <cm:ActionMessage MethodName="Search">
                                    <cm:Parameter Value="{x:Static search:SearchType.Normal}" />
                                </cm:ActionMessage>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding SearchSettings.WholeWord, Mode=TwoWay}" Content="&quot;&quot;" Width="30" ToolTip="Whole word">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <cm:ActionMessage MethodName="Search">
                                    <cm:Parameter Value="{x:Static search:SearchType.Normal}" />
                                </cm:ActionMessage>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ToggleButton>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBox Name="SearchTextBox" Grid.Column="0" Text="{Binding SearchSettings.SearchTerm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 Margin="5,0,0,0" MinWidth="300" TextWrapping="Wrap" VerticalContentAlignment="Center">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <cm:ActionMessage MethodName="Search">
                                        <cm:Parameter Value="{x:Static search:SearchType.Normal}" />
                                    </cm:ActionMessage>
                                </i:EventTrigger>
                                <s:InputBindingTrigger>
                                    <s:InputBindingTrigger.InputBinding>
                                        <KeyBinding Key="Enter" />
                                    </s:InputBindingTrigger.InputBinding>
                                    <cm:ActionMessage MethodName="Search">
                                        <cm:Parameter Value="{x:Static search:SearchType.Next}" />
                                    </cm:ActionMessage>
                                </s:InputBindingTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <TextBox Name="ReplaceTextBox" Grid.Column="1" Text="{Binding SearchSettings.ReplaceTerm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 Margin="5,0,0,0" MinWidth="300" TextWrapping="Wrap" VerticalContentAlignment="Center">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <cm:ActionMessage MethodName="Search">
                                        <cm:Parameter Value="{x:Static search:SearchType.Normal}" />
                                    </cm:ActionMessage>
                                </i:EventTrigger>
                                <s:InputBindingTrigger>
                                    <s:InputBindingTrigger.InputBinding>
                                        <KeyBinding Key="Enter" />
                                    </s:InputBindingTrigger.InputBinding>
                                    <cm:ActionMessage MethodName="Search">
                                        <cm:Parameter Value="{x:Static search:SearchType.Replace}" />
                                    </cm:ActionMessage>
                                </s:InputBindingTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </Grid>
                </DockPanel>
            </Border>
        </Grid>

        <Grid Grid.Row="3">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Background" Value="#FFbe0606" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding MDI.ActiveItem.Overtype}" Value="True">
                            <Setter Property="Background" Value="MediumBlue" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="OVERTYPE"
                           Visibility="{Binding MDI.ActiveItem.Overtype, FallbackValue={x:Static Visibility.Collapsed}, Converter={StaticResource BooleanToVisibilityConverter}}"
                           Foreground="White" VerticalAlignment="Center" Margin="20 0 0 0" />

                <TextBlock Text="{Binding WorkingText,StringFormat='{}{0}...'}"
                           Visibility="{Binding IsWorking, Converter={StaticResource BooleanToVisibilityConverter}}" Foreground="White"
                           VerticalAlignment="Center" Margin="20 0 0 0" />

                <TextBlock Margin="20,0,0,0" VerticalAlignment="Center" Foreground="White"
                           Visibility="{Binding MDI.ActiveItem, Converter={StaticResource NullToVisibilityConverter}}">
                    <Run Text="{Binding MDI.ActiveItem.WordCount, Mode=OneWay}" /> WORDS
                </TextBlock>

                <StackPanel Orientation="Horizontal" Margin="20,0,0,0" VerticalAlignment="Center">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="{Binding MDI.ActiveItem, Converter={StaticResource NullToVisibilityConverter}}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SearchingWithBar}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SearchSettings.SearchTerm}" Value="">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <TextBlock Foreground="White"
                               Text="{Binding MDI.ActiveItem.SearchProvider.CurrentHitIndex, Mode=OneWay, StringFormat='{}{0} OF '}">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MDI.ActiveItem.SearchProvider.CurrentHitIndex}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Foreground="White"
                               Text="{Binding MDI.ActiveItem.SearchProvider.NumberOfHits, Mode=OneWay, StringFormat='{}{0} MATCHES'}" />
                </StackPanel>
            </StackPanel>

            <Slider Maximum="{Binding MDI.ActiveItem.MaxZoom}" Minimum="{Binding MDI.ActiveItem.MinZoom}" VerticalAlignment="Bottom"
                    HorizontalAlignment="Right" Width="100" Margin="0,0,20,0"
                    Visibility="{Binding MDI.ActiveItem, Converter={StaticResource NullToVisibilityConverter}}"
                    Value="{Binding MDI.ActiveItem.ZoomLevel}" LargeChange="0.1" SmallChange="0.05" />
        </Grid>
    </Grid>
</Window>
