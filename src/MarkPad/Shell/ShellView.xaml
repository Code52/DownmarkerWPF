<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:s="http://schemas.markpad.net/winfx/xaml/shared"
    xmlns:cm="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
    xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
    xmlns:Shell="clr-namespace:MarkPad.Shell" 
    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:Settings="clr-namespace:MarkPad.Settings"
    x:Class="MarkPad.Shell.ShellView"
    mc:Ignorable="d" 
    MouseLeftButtonDown="DragMoveWindow"
	MouseMove="MouseMoveWindow"
    DragOver="WindowDragOver"
    Icon="../markpad.ico"
    SnapsToDevicePixels="True"
    AllowDrop="True"
    x:Name="window"
    d:DataContext="{d:DesignInstance {x:Type Shell:ShellViewModel}}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MarkPad;component/Styles/MarkPad.Accents.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <sys:String x:Key="WindowCommandsMinimiseToolTip">Minimise</sys:String>
            <sys:String x:Key="WindowCommandsMaximiseToolTip">Maximise</sys:String>
            <sys:String x:Key="WindowCommandsRestoreToolTip">Restore</sys:String>
            <sys:String x:Key="WindowCommandsCloseToolTip">Close</sys:String>
        </ResourceDictionary>
    </Window.Resources>

    <i:Interaction.Behaviors>
        <Behaviours:BorderlessWindowBehavior/>
    </i:Interaction.Behaviors>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="PreviewDrop">
            <cm:ActionMessage MethodName="OpenDocument">
                <cm:Parameter Value="$filenames" />
            </cm:ActionMessage>
        </i:EventTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Modifiers="Ctrl" Key="N" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="NewDocument" />
        </s:InputBindingTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Modifiers="Ctrl" Key="S" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="SaveDocument" />
        </s:InputBindingTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Modifiers="Ctrl+Shift" Key="S" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="SaveAllDocuments" />
        </s:InputBindingTrigger>

        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Key="F10" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="ToggleWebView" />
        </s:InputBindingTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Modifiers="Ctrl" Key="O" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="OpenDocument" />
        </s:InputBindingTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Modifiers="Ctrl" Key="W" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="CloseDocument" />
        </s:InputBindingTrigger>
    </i:Interaction.Triggers>

    <Window.Background>
        <LinearGradientBrush MappingMode="Absolute" StartPoint="0,0" EndPoint="0,150">
            <GradientStop Color="#FFDEDEDE"/>
            <GradientStop Color="White" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>
    <Grid Margin="0" s:VisualStateHelper.VisualStateName="{Binding CurrentState}" >
        <VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="VisualStateGroup">
    			<VisualStateGroup.Transitions>
    				<VisualTransition GeneratedDuration="0" To="SaveState"/>
                    <VisualTransition GeneratedDuration="0" To="NewState" />
                    <VisualTransition GeneratedDuration="0" To="OpenState"/>
                    <VisualTransition GeneratedDuration="0" To="ShowSettings">
                    	<Storyboard>
                    		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="settingsControl">
                    			<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    			<DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
                    		</ObjectAnimationUsingKeyFrames>
                    		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="settingsControl">
                    			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    			<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    				<EasingDoubleKeyFrame.EasingFunction>
                    					<CircleEase EasingMode="EaseIn"/>
                    				</EasingDoubleKeyFrame.EasingFunction>
                    			</EasingDoubleKeyFrame>
                    		</DoubleAnimationUsingKeyFrames>
                    		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="settingsShadow">
                    			<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    			<DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
                    		</ObjectAnimationUsingKeyFrames>
                    		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="settingsShadow">
                    			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    			<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                    		</DoubleAnimationUsingKeyFrames>
                    		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="settingsControl">
                    			<EasingDoubleKeyFrame KeyTime="0" Value="150">
                    				<EasingDoubleKeyFrame.EasingFunction>
                    					<CubicEase EasingMode="EaseOut"/>
                    				</EasingDoubleKeyFrame.EasingFunction>
                    			</EasingDoubleKeyFrame>
                    			<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                    				<EasingDoubleKeyFrame.EasingFunction>
                    					<CircleEase EasingMode="EaseOut"/>
                    				</EasingDoubleKeyFrame.EasingFunction>
                    			</EasingDoubleKeyFrame>
                    		</DoubleAnimationUsingKeyFrames>
                    	</Storyboard>
                    </VisualTransition>
                    <VisualTransition GeneratedDuration="0" To="HideSettings">
                    	<Storyboard>
                    		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="settingsShadow">
                    			<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    			<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                    		</ObjectAnimationUsingKeyFrames>
                    		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="settingsControl">
                    			<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    			<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                    		</ObjectAnimationUsingKeyFrames>
                    		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="settingsShadow">
                    			<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    			<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    				<EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                    				</EasingDoubleKeyFrame.EasingFunction>
                    			</EasingDoubleKeyFrame>
                    		</DoubleAnimationUsingKeyFrames>
                    		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="settingsControl">
                    			<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    			<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    				<EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                    				</EasingDoubleKeyFrame.EasingFunction>
                    			</EasingDoubleKeyFrame>
                    		</DoubleAnimationUsingKeyFrames>
                    		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="settingsControl">
                    			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    			<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="150"/>
                    		</DoubleAnimationUsingKeyFrames>
                    	</Storyboard>
                    </VisualTransition>
    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="SaveState">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="newItems">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="saveItems">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						<DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="saveItems">
    						<EasingDoubleKeyFrame KeyTime="0" Value="0">
    							<EasingDoubleKeyFrame.EasingFunction>
    								<CubicEase EasingMode="EaseIn"/>
    							</EasingDoubleKeyFrame.EasingFunction>
    						</EasingDoubleKeyFrame>
    						<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
    							<EasingDoubleKeyFrame.EasingFunction>
    								<CubicEase EasingMode="EaseIn"/>
    							</EasingDoubleKeyFrame.EasingFunction>
    						</EasingDoubleKeyFrame>
    					</DoubleAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="saveItems">
    						<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
    							<EasingDoubleKeyFrame.EasingFunction>
    								<CircleEase EasingMode="EaseOut"/>
    							</EasingDoubleKeyFrame.EasingFunction>
    						</EasingDoubleKeyFrame>
    					</DoubleAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
                <VisualState x:Name="NewState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="openItems">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="saveItems">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="newItems">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="newItems">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseIn"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseIn"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="newItems">
                            <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                        	<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                        		<EasingDoubleKeyFrame.EasingFunction>
                        			<CircleEase EasingMode="EaseOut"/>
                        		</EasingDoubleKeyFrame.EasingFunction>
                        	</EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="OpenState">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="newItems">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="saveItems">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="openItems">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="openItems">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseIn"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseIn"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="openItems">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
    			</VisualState>
                <VisualState x:Name="ShowSettings">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="settingsControl">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="settingsShadow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                    
                </VisualState>
                <VisualState x:Name="HideSettings">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="settingsControl">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="settingsShadow">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
    	</VisualStateManager.VisualStateGroups>
        <Grid>
    		<Grid.RowDefinitions>
    			<RowDefinition Height="Auto" MinHeight="58" />
    			<RowDefinition />
    		</Grid.RowDefinitions>
    		<TextBlock TextWrapping="Wrap" VerticalAlignment="Top" d:LayoutOverrides="Width" FontWeight="Bold" FontSize="10.667" Margin="30,10,0,0" Visibility="Collapsed"><Run Text="MARKPAD"/></TextBlock>
    		<WrapPanel UseLayoutRounding="False" HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal" Margin="30,9,0,0">
    			<WrapPanel.Resources>
    				<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ChromelessButtonStyle}">
    					<Setter Property="FontSize" Value="20" />
    					<Setter Property="Margin" Value="0,0,20,0" />
    					<Setter Property="FontWeight" Value="Light" />
    				</Style>
    			</WrapPanel.Resources>
    			<Button x:Name="ShowNew" Content="new">
    				<i:Interaction.Triggers>
    					<i:EventTrigger EventName="Click">
    						<ei:GoToStateAction StateName="NewState"/>
    					</i:EventTrigger>
    				</i:Interaction.Triggers>
					</Button>
    			<Button x:Name="ShowOpen" Content="open" >
    				<i:Interaction.Triggers>
    					<i:EventTrigger EventName="Click">
    						<ei:GoToStateAction StateName="OpenState"/>
    					</i:EventTrigger>
    				</i:Interaction.Triggers>
    			</Button>
				<Button x:Name="ShowSave" Content="save" >
    				<i:Interaction.Triggers>
    					<i:EventTrigger EventName="Click">
    						<ei:GoToStateAction StateName="SaveState"/>
    					</i:EventTrigger>
    				</i:Interaction.Triggers>
    			</Button>
    			<Button x:Name="PrintDocument" Content="print" />
    			<Button x:Name="PublishDocument" Content="publish" />
    		</WrapPanel>
    		<WrapPanel x:Name="newItems" Margin="30,0,0,0" Opacity="0.995" VerticalAlignment="Bottom" Height="20" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="VerticalAlignment, GridBox">
    			<WrapPanel.Resources>
    				<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ChromelessButtonStyle}">
    					<Setter Property="FontSize" Value="13" />
    					<Setter Property="Margin" Value="0,0,20,0" />
    					<Setter Property="FontWeight" Value="SemiBold" />
    				</Style>
    			</WrapPanel.Resources>
                <WrapPanel.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </WrapPanel.RenderTransform>
                <Button x:Name="NewDocument" Content="BLANK PAGE" />
    			<Button x:Name="NewJekyllDocument" Content="JEKYLL PAGE" />
    		</WrapPanel>
    		<WrapPanel x:Name="saveItems" Visibility="Collapsed" Opacity="0" Margin="30,0,0,0" VerticalAlignment="Bottom" Height="20" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="VerticalAlignment, GridBox">
    			<WrapPanel.Resources>
    				<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ChromelessButtonStyle}">
    					<Setter Property="FontSize" Value="13" />
    					<Setter Property="Margin" Value="0,0,20,0" />
    					<Setter Property="FontWeight" Value="SemiBold" />
    				</Style>
    			</WrapPanel.Resources>
    			<WrapPanel.RenderTransform>
    				<TransformGroup>
    					<ScaleTransform/>
    					<SkewTransform/>
    					<RotateTransform/>
    					<TranslateTransform X="-50"/>
    				</TransformGroup>
    			</WrapPanel.RenderTransform>
    			<Button x:Name="SaveDocument" Content="SAVE" />
                <Button x:Name="SaveAsDocument" Content="SAVE AS" />
    			<Button x:Name="SaveAllDocuments" Content="SAVE ALL" />
    		</WrapPanel>
            <WrapPanel x:Name="openItems" Visibility="Collapsed"  Opacity="0" Margin="30,0,0,0" VerticalAlignment="Bottom" Height="20" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="VerticalAlignment, GridBox">
    			<WrapPanel.Resources>
    				<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ChromelessButtonStyle}">
    					<Setter Property="FontSize" Value="13" />
    					<Setter Property="Margin" Value="0,0,20,0" />
    					<Setter Property="FontWeight" Value="SemiBold" />
    				</Style>
    			</WrapPanel.Resources>
                <WrapPanel.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform X="-50"/>
                    </TransformGroup>
                </WrapPanel.RenderTransform>
                <Button x:Name="OpenDocument" Content="OPEN" />
                <Button x:Name="OpenFromWeb" Content="OPEN FROM WEB" />
    		</WrapPanel>
    		<StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10" Orientation="Horizontal">
                <ContentControl x:Name="Updater" />
                <Button Content="SETTINGS" Style="{DynamicResource ChromelessButtonStyle}" FontSize="10.667" FontWeight="Bold">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <cm:ActionMessage MethodName="ShowSettings" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <TextBlock Margin="10,0"><Run Text="|"/></TextBlock>
                <Button Content="HELP" Style="{DynamicResource ChromelessButtonStyle}" FontSize="10.667" FontWeight="Bold" Margin="0,0,20,0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <cm:ActionMessage MethodName="ShowHelp" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
    			<Button Click="ButtonMinimiseOnClick" ToolTip="{DynamicResource WindowCommandsMinimiseToolTip}" Style="{DynamicResource ChromelessButtonStyle}" Content="0" FontFamily="Marlett" />
    			<Button Click="ButtonMaxRestoreOnClick" ToolTip="{DynamicResource WindowCommandsMaximiseToolTip}" x:Name="maxRestore" Style="{DynamicResource ChromelessButtonStyle}" Content="1" FontFamily="Marlett" />
    			<Button x:Name="TryClose" ToolTip="{DynamicResource WindowCommandsCloseToolTip}" Style="{DynamicResource ChromelessButtonStyle}" Content="r" FontFamily="Marlett" />
    		</StackPanel>
    		<Rectangle HorizontalAlignment="Left" Stroke="Black" Width="10" StrokeThickness="0" Margin="0,10,0,0">
    			<Rectangle.Fill>
    				<SolidColorBrush Color="{DynamicResource HighlightDarkColor}" />
    			</Rectangle.Fill>
    		</Rectangle>

    		<ContentControl x:Name="MDI"
    			Margin="10,0"
    			Grid.Row="1" />
    	</Grid>
        <Rectangle x:Name="settingsShadow" Fill="#3F000000" Stroke="Black" StrokeThickness="0" Visibility="Collapsed"/>
        <Settings:SettingsView x:Name="settingsControl" Visibility="Collapsed"  DataContext="{Binding Settings}" Margin="100,0,0,0" RenderTransformOrigin="0.5,0.5"  >
        	<Settings:SettingsView.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Settings:SettingsView.RenderTransform>
        </Settings:SettingsView>
    </Grid>
</Window>
