<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:s="http://schemas.markpad.net/winfx/xaml/shared"
    xmlns:cm="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
    xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
    xmlns:Shell="clr-namespace:MarkPad.Shell" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
    x:Class="MarkPad.Shell.ShellView"
    mc:Ignorable="d" 
    MouseLeftButtonDown="DragMoveWindow"
    DragOver="WindowDragOver"
    Icon="../markpad.ico"
    SnapsToDevicePixels="True"
    AllowDrop="True"
    KeyDown="WindowKeyDown"
    d:DataContext="{d:DesignInstance {x:Type Shell:ShellViewModel}}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MarkPad;component/Styles/MarkPad.Accents.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <sys:String x:Key="WindowCommandsMinimiseToolTip">Minimise</sys:String>
            <sys:String x:Key="WindowCommandsMaximiseToolTip">Maximise</sys:String>
            <sys:String x:Key="WindowCommandsRestoreToolTip">Restore</sys:String>
            <sys:String x:Key="WindowCommandsCloseToolTip">Close</sys:String>
            <Storyboard x:Key="ShowCheatSheet">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="cheatSheetDropdown">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="cheatSheetDropdown">
                    <EasingThicknessKeyFrame KeyTime="0" Value="0,-341,0,0"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HideCheatSheet">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="cheatSheetDropdown">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="cheatSheetDropdown">
                    <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0,-341,0,0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </Window.Resources>

    <i:Interaction.Behaviors>
        <Behaviours:BorderlessWindowBehavior/>
    </i:Interaction.Behaviors>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="PreviewDrop">
            <cm:ActionMessage MethodName="OpenDocument">
                <cm:Parameter Value="$filenames" />
            </cm:ActionMessage>
        </i:EventTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Modifiers="Ctrl" Key="N" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="NewDocument" />
        </s:InputBindingTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Modifiers="Ctrl" Key="S" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="SaveDocument" />
        </s:InputBindingTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Modifiers="Ctrl+Shift" Key="S" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="SaveAllDocuments" />
        </s:InputBindingTrigger>

        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Modifiers="Ctrl" Key="B" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="ToggleBold" />
        </s:InputBindingTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Modifiers="Ctrl" Key="I" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="ToggleItalic" />
        </s:InputBindingTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Modifiers="Ctrl" Key="J" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="ToggleCode" />
        </s:InputBindingTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Modifiers="Ctrl" Key="K" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="SetHyperlink" />
        </s:InputBindingTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Key="F10" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="ToggleWebView" />
        </s:InputBindingTrigger>
        <s:InputBindingTrigger>
            <s:InputBindingTrigger.InputBinding>
                <KeyBinding Modifiers="Ctrl" Key="O" />
            </s:InputBindingTrigger.InputBinding>
            <cm:ActionMessage MethodName="OpenDocument" />
        </s:InputBindingTrigger>
    </i:Interaction.Triggers>

    <Window.Background>
        <LinearGradientBrush MappingMode="Absolute" StartPoint="0,0" EndPoint="0,150">
            <GradientStop Color="#FFDEDEDE"/>
            <GradientStop Color="White" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>
    <Grid Margin="0,0,0,10">
    	<VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="VisualStateGroup">
    			<VisualStateGroup.Transitions>
    				<VisualTransition GeneratedDuration="0" To="SaveState"/>
                    <VisualTransition GeneratedDuration="0" To="NewState">
    					<Storyboard/>
    				</VisualTransition>
                    <VisualTransition GeneratedDuration="0" To="OpenState"/>
    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="SaveState">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="newItems">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="saveItems">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    						<DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="saveItems">
    						<EasingDoubleKeyFrame KeyTime="0" Value="0">
    							<EasingDoubleKeyFrame.EasingFunction>
    								<CubicEase EasingMode="EaseIn"/>
    							</EasingDoubleKeyFrame.EasingFunction>
    						</EasingDoubleKeyFrame>
    						<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
    							<EasingDoubleKeyFrame.EasingFunction>
    								<CubicEase EasingMode="EaseIn"/>
    							</EasingDoubleKeyFrame.EasingFunction>
    						</EasingDoubleKeyFrame>
    					</DoubleAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="saveItems">
    						<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
    							<EasingDoubleKeyFrame.EasingFunction>
    								<CircleEase EasingMode="EaseOut"/>
    							</EasingDoubleKeyFrame.EasingFunction>
    						</EasingDoubleKeyFrame>
    					</DoubleAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
                <VisualState x:Name="NewState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="openItems">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="saveItems">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="newItems">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="newItems">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseIn"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseIn"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="newItems">
                            <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                        	<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                        		<EasingDoubleKeyFrame.EasingFunction>
                        			<CircleEase EasingMode="EaseOut"/>
                        		</EasingDoubleKeyFrame.EasingFunction>
                        	</EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                    <VisualState x:Name="OpenState">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="newItems">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="saveItems">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="openItems">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="openItems">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseIn"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseIn"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="openItems">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    	</VisualStateManager.VisualStateGroups>
        <Grid x:Name="cheatSheetDropdown" UseLayoutRounding="True" SnapsToDevicePixels="True" Panel.ZIndex="100" HorizontalAlignment="Center" VerticalAlignment="Top" Background="White" Margin="0,-341,0,0" Visibility="Collapsed">
            <Grid.Effect>
                <DropShadowEffect BlurRadius="10" Color="Black" Opacity="0.25" Direction="270" />
            </Grid.Effect>
            <Grid Margin="10"  Height="321" Width="687">
                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="29.333" FontFamily="Segoe UI" FontWeight="Light"><Run Text="markdown cheat sheet"/></TextBlock>
                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,51,0,0">
                    <TextBlock TextWrapping="Wrap" FontWeight="Bold" FontSize="10.667"><Run Text="FORMAT TEXT"/></TextBlock>
                    <TextBlock TextWrapping="Wrap" Opacity="0.75" FontWeight="Bold" FontSize="10.667"><Run Text="HEADERS"/></TextBlock>
                    <TextBlock TextWrapping="Wrap" FontFamily="Courier New"><Run Text="# This is an &lt;h1&gt; tag"/><LineBreak /><Run Text="## This is an &lt;h2&gt; tag"/><LineBreak /><Run Text="####### This is an &lt;h6&gt; tag"/></TextBlock>

                    <TextBlock TextWrapping="Wrap" Margin="0,10,0,0" Opacity="0.75" FontSize="10.667"><Run FontWeight="Bold" Text="TEXT STYLE"/></TextBlock>
                    <TextBlock TextWrapping="Wrap" FontFamily="Courier New" ><Run Text="*This text will be italic*"/><LineBreak /><Run Text="_This will also be italic_"/><LineBreak /><Run Text="**This text will be bold**"/><LineBreak /><Run Text="__This will also be bold__"/><LineBreak /><LineBreak /><Run Text="*You **can** combine them*"/></TextBlock>

                </StackPanel>
                <StackPanel VerticalAlignment="Top" Margin="230.666,51,0,0" HorizontalAlignment="Left">
                    <TextBlock TextWrapping="Wrap" FontWeight="Bold" FontSize="10.667"><Run Text="LISTS"/></TextBlock>
                    <TextBlock TextWrapping="Wrap" Opacity="0.75" FontWeight="Bold" FontSize="10.667"><Run Text="UNORDERED"/></TextBlock>
                    <TextBlock TextWrapping="Wrap" FontFamily="Courier New"><Run Text="* Item 1"/><LineBreak/><Run Text="* Item 2"/><LineBreak/><Run Text="    * Item 2a"/><LineBreak/><Run Text="    * Item 2b"/></TextBlock>

                    <TextBlock TextWrapping="Wrap" Margin="0,10,0,0" Opacity="0.75" FontSize="10.667"><Run FontWeight="Bold" Text="ORDERED"/></TextBlock>
                    <TextBlock TextWrapping="Wrap" FontFamily="Courier New" ><Run Text="1. Item 1"/><LineBreak/><Run Text="2. Item 2"/><LineBreak/><Run Text="    * Item 2a"/><LineBreak/><Run Text="    * Item 2b"/></TextBlock>

                </StackPanel>
                <StackPanel VerticalAlignment="Top" Margin="0,51,63.4,0" HorizontalAlignment="Right">
                    <TextBlock TextWrapping="Wrap" FontWeight="Bold" FontSize="10.667" Text="MISCELLANEOUS"/>
                    <TextBlock TextWrapping="Wrap" Opacity="0.75" FontWeight="Bold" FontSize="10.667" Text="IMAGES"/>
                    <TextBlock TextWrapping="Wrap" FontFamily="Courier New"><Run Text="![Something!](/images/logo.png)"/><LineBreak/><Run Text="Format: ![Alt Text](url)"/></TextBlock>

                    <TextBlock TextWrapping="Wrap" Margin="0,10,0,0" Opacity="0.75" FontSize="10.667" FontWeight="Bold" Text="LINKS"/>
                    <TextBlock TextWrapping="Wrap" FontFamily="Courier New" ><Run Text="http://foo.com"/><LineBreak/><Run Text="[title](http://foo.com)"/></TextBlock>
                </StackPanel>

                <Button Click="DismissCheatSheet" Style="{DynamicResource ChromelessButtonStyle}" ToolTip="dismiss cheat sheet" Foreground="Black" Content="r" FontFamily="Marlett" HorizontalAlignment="Right" VerticalAlignment="Top" />
            </Grid>
        </Grid>
    	<Grid>
    		<Grid.RowDefinitions>
    			<RowDefinition Height="Auto" MinHeight="58" />
    			<RowDefinition />
    		</Grid.RowDefinitions>
    		<TextBlock TextWrapping="Wrap" VerticalAlignment="Top" d:LayoutOverrides="Width" FontWeight="Bold" FontSize="10.667" Margin="30,10,0,0" Visibility="Collapsed"><Run Text="MARKPAD"/></TextBlock>
    		<WrapPanel UseLayoutRounding="False" HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal" Margin="30,9,0,0">
    			<WrapPanel.Resources>
    				<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ChromelessButtonStyle}">
    					<Setter Property="FontSize" Value="20" />
    					<Setter Property="Margin" Value="0,0,20,0" />
    					<Setter Property="FontWeight" Value="Light" />
    				</Style>
    			</WrapPanel.Resources>
    			<Button x:Name="ShowNew" Content="new">
    				<i:Interaction.Triggers>
    					<i:EventTrigger EventName="Click">
    						<ei:GoToStateAction StateName="NewState"/>
    					</i:EventTrigger>
    				</i:Interaction.Triggers>
					</Button>
    			<Button x:Name="ShowOpen" Content="open" >
    				<i:Interaction.Triggers>
    					<i:EventTrigger EventName="Click">
    						<ei:GoToStateAction StateName="OpenState"/>
    					</i:EventTrigger>
    				</i:Interaction.Triggers>
    			</Button>
				<Button x:Name="ShowSave" Content="save" >
    				<i:Interaction.Triggers>
    					<i:EventTrigger EventName="Click">
    						<ei:GoToStateAction StateName="SaveState"/>
    					</i:EventTrigger>
    				</i:Interaction.Triggers>
    			</Button>
    			<Button x:Name="PrintDocument" Content="print" />
    			<Button x:Name="PublishDocument" Content="publish" />
    		</WrapPanel>
    		<WrapPanel x:Name="newItems" Margin="30,0,0,0" Opacity="0.995" VerticalAlignment="Bottom" Height="20" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="VerticalAlignment, GridBox">
    			<WrapPanel.Resources>
    				<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ChromelessButtonStyle}">
    					<Setter Property="FontSize" Value="13" />
    					<Setter Property="Margin" Value="0,0,20,0" />
    					<Setter Property="FontWeight" Value="SemiBold" />
    				</Style>
    			</WrapPanel.Resources>
                <WrapPanel.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </WrapPanel.RenderTransform>
                <Button x:Name="NewDocument" Content="BLANK PAGE" />
    			<Button x:Name="NewJekyllDocument" Content="JEKYLL PAGE" />
    		</WrapPanel>
    		<WrapPanel x:Name="saveItems" Visibility="Collapsed" Opacity="0" Margin="30,0,0,0" VerticalAlignment="Bottom" Height="20" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="VerticalAlignment, GridBox">
    			<WrapPanel.Resources>
    				<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ChromelessButtonStyle}">
    					<Setter Property="FontSize" Value="13" />
    					<Setter Property="Margin" Value="0,0,20,0" />
    					<Setter Property="FontWeight" Value="SemiBold" />
    				</Style>
    			</WrapPanel.Resources>
    			<WrapPanel.RenderTransform>
    				<TransformGroup>
    					<ScaleTransform/>
    					<SkewTransform/>
    					<RotateTransform/>
    					<TranslateTransform X="-50"/>
    				</TransformGroup>
    			</WrapPanel.RenderTransform>
    			<Button x:Name="SaveDocument" Content="SAVE" />
    			<Button x:Name="SaveAllDocuments" Content="SAVE ALL" />
    		</WrapPanel>
            <WrapPanel x:Name="openItems" Visibility="Collapsed"  Opacity="0" Margin="30,0,0,0" VerticalAlignment="Bottom" Height="20" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="VerticalAlignment, GridBox">
    			<WrapPanel.Resources>
    				<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ChromelessButtonStyle}">
    					<Setter Property="FontSize" Value="13" />
    					<Setter Property="Margin" Value="0,0,20,0" />
    					<Setter Property="FontWeight" Value="SemiBold" />
    				</Style>
    			</WrapPanel.Resources>
                <WrapPanel.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform X="-50"/>
                    </TransformGroup>
                </WrapPanel.RenderTransform>
                <Button x:Name="OpenDocument" Content="OPEN" />
                <Button x:Name="OpenFromWeb" Content="OPEN FROM WEB" />
    		</WrapPanel>
    		<StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10" Orientation="Horizontal">
    			<Button x:Name="ShowSettings" Content="SETTINGS" Style="{DynamicResource ChromelessButtonStyle}" FontSize="10.667" Margin="0,0,0,0" FontWeight="Bold" />
    			<TextBlock Margin="10,0"><Run Text="|"/></TextBlock>
    			<Button x:Name="ShowAbout" Content="ABOUT" Style="{DynamicResource ChromelessButtonStyle}" FontSize="10.667" Margin="0,0,20,0" FontWeight="Bold" />
    			<Button Click="ButtonMinimiseOnClick"   ToolTip="{DynamicResource WindowCommandsMinimiseToolTip}" Style="{DynamicResource ChromelessButtonStyle}" Content="0" FontFamily="Marlett" />
    			<Button Click="ButtonMaxRestoreOnClick"   ToolTip="{DynamicResource WindowCommandsMaximiseToolTip}" x:Name="maxRestore" Style="{DynamicResource ChromelessButtonStyle}" Content="1" FontFamily="Marlett" />
    			<Button x:Name="TryClose" ToolTip="{DynamicResource WindowCommandsCloseToolTip}" Style="{DynamicResource ChromelessButtonStyle}" Content="r" FontFamily="Marlett" />
    		</StackPanel>
    		<Rectangle HorizontalAlignment="Left" Stroke="Black" Width="10" StrokeThickness="0" Margin="0,10,0,0">
    			<Rectangle.Fill>
    				<SolidColorBrush Color="{DynamicResource HighlightDarkColor}" />
    			</Rectangle.Fill>
    		</Rectangle>

    		<ContentControl x:Name="MDI"
    			Margin="10,0"
    			Grid.Row="1" />
    	</Grid>
    </Grid>
</Window>
